on:
    workflow_call:
      inputs:
        acr:
          type: string
        dockerfile_path:
          type: string
        docker_context:
          type: string
        harbor:
          type: string
        module:
          type: string
        platform:
          type: string
        updated_tags:
          description: 'Comma-seperated list of new tags'
          type: string
        version:
          type: string
      secrets:
          REGISTRY_LOGIN_SERVER:
              required: true
          REGISTRY_USERNAME:
              required: true
          REGISTRY_PASSWORD:
              required: true
          HARBOR_CLI_SECRET:
              required: true
          HARBOR_USERNAME:
            required: true

jobs:
  # build-arm64-image:
  #   runs-on: arm64
  #   steps:
  #     - name: build-arm64-image
  #       uses: IQGeo/devops-engineering-ci-public-build-push-action@main
  #       with:
  #         dockerfile_path: ${{ inputs.dockerfile_path }}
  #         docker_context: ${{ inputs.docker_context }}
  #         version: ${{ inputs.version }}
  #         tag: ${{ github.run_id }}_arm-64
  #         platform: arm64
  #         module: ${{ inputs.module }}
  #         acr: ${{ inputs.acr }}
  #         harbor: ${{ inputs.harbor }}
  #         registry_login_server: ${{ secrets.REGISTRY_LOGIN_SERVER  }}
  #         registry_username : ${{ secrets.REGISTRY_USERNAME  }}
  #         registry_password : ${{ secrets.REGISTRY_PASSWORD  }}
  #         harbor_cli_secret : ${{ secrets.HARBOR_CLI_SECRET  }}
  #         harbor_username : ${{ secrets.HARBOR_USERNAME  }}
  build-amd64-arm64-images:
    strategy:
      matrix:
        tag: [ '${{ github.run_id }}_amd-64', '${{ github.run_id }}_arm-64 ']
        platform: [ 'arm64', 'x64' ]
        exclude:
          - tag: '${{ github.run_id }}_amd-64'
            platform: 'arm64'
          - tag: '${{ github.run_id }}_arm-64 '
            platform: 'x64'
    runs-on: ${{ matrix.platform }}
    steps:
      - name: build-amd64-image
        uses: IQGeo/devops-engineering-ci-public-build-push-action@main
        with:
          dockerfile_path: ${{ inputs.dockerfile_path }}
          docker_context: ${{ inputs.docker_context }}
          version: ${{ inputs.version }}
          tag: ${{ matrix.tag }}
          platform: ${{ matrix.platform }}
          module: ${{ inputs.module }}
          acr: ${{ inputs.acr }}
          harbor: ${{ inputs.harbor }}
          registry_login_server: ${{ secrets.REGISTRY_LOGIN_SERVER  }}
          registry_username : ${{ secrets.REGISTRY_USERNAME  }}
          registry_password : ${{ secrets.REGISTRY_PASSWORD  }}
          harbor_cli_secret : ${{ secrets.HARBOR_CLI_SECRET  }}
          harbor_username : ${{ secrets.HARBOR_USERNAME  }}
  build-multi-arch:
    needs: build-amd64-arm64-images
    runs-on: x64
    steps:
      - name: Debug
        run: |
          echo "${{ inputs.updated_tags }}"
      - name: build-multi-arch
        uses: IQGeo/devops-engineering-ci-public-multi-arch-action@test-harbor-push
        with:
          version: ${{ inputs.version }}
          amd_tag: ${{ github.run_id }}_amd-64
          arm_tag: ${{ github.run_id }}_arm-64
          updated_tags: ${{ inputs.updated_tags}}
          module: ${{ inputs.module }}
          acr: ${{ inputs.acr }}
          harbor: ${{ inputs.harbor }}
          registry_login_server: ${{ secrets.REGISTRY_LOGIN_SERVER  }}
          registry_username : ${{ secrets.REGISTRY_USERNAME  }}
          registry_password : ${{ secrets.REGISTRY_PASSWORD  }}
          harbor_cli_secret : ${{ secrets.HARBOR_CLI_SECRET  }}
          harbor_username : ${{ secrets.HARBOR_USERNAME  }}
